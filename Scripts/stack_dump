#!/usr/bin/env python3
import r2pipe
import sys

def print_usage():
    print("""Usage: . ./stack_dump <offset> <amount> <file_name>
offset    | int | Byte offset subtracted from RBP to make base
amount    | int | Amount of indeces printed from the stack
file_name | str | Name of file results are saved to
          
Integers can be expressed in base 10 or base 16""")

def parse_number(value):
    try:
        if value.startswith('0x') or value.startswith('0X'):
            return int(value, 16)
        return int(value, 10)
    except ValueError:
        print_usage()
        raise ValueError(f"Invalid number format: {value}")

if len(sys.argv) < 4:
    print_usage()
    sys.exit(1)

try:
    offset = parse_number(sys.argv[1])
    amount = parse_number(sys.argv[2])
    file_name = sys.argv[3]
except ValueError as e:
    print(e)
    sys.exit(1)

r2 = r2pipe.open()
print(f"Finding pointer chains at at RBP-{hex(offset)}")

RBP = int(r2.cmd("dr rbp"), 16)

with open(file_name, "w") as file:
    for i in range(1, amount):
        addr = RBP + (8 * i) - offset
        val = r2.cmd(f"pxr8 8 @ {hex(addr)}")
        file.write(f"{i} {val}")

print(f"Saved pointer chains to '{file_name}'")

r2.quit()